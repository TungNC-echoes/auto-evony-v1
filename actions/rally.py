import time
from actions.war_actions import join_war_sequence, continue_war_sequence, join_war_sequence_no_general, continue_war_sequence_no_general
from utils.image_utils import check_button_exists, find_and_click_button
from utils.adb_utils import swipe_up, swipe_down, adb_command, tap_screen, take_screenshot

def auto_join_rally(device_id=None, use_general=True):
    """H√†m ch·∫°y bot t·ª± ƒë·ªông tham gia chi·∫øn tranh"""
    war_type = "c√≥ ch·ªçn t∆∞·ªõng" if use_general else "kh√¥ng ch·ªçn t∆∞·ªõng"
    print(f"B·∫Øt ƒë·∫ßu ch·∫°y bot t·ª± ƒë·ªông tham gia chi·∫øn tranh ({war_type})...")

    # Th·ª±c hi·ªán chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu
    while True:
        try:
            # Ki·ªÉm tra n√∫t back tr∆∞·ªõc
            if check_button_exists("back", device_id=device_id):
                # print("Ph√°t hi·ªán ƒëang ·ªü m√†n h√¨nh ch·ªù, quay l·∫°i m√†n h√¨nh ch√≠nh...")
                if not find_and_click_button("back", device_id=device_id):
                    print("Kh√¥ng th·ªÉ click v√†o n√∫t back, th·ª≠ d√πng ph√≠m ESC...")
                    if adb_command('adb shell input keyevent KEYCODE_ESCAPE'):
                        print("ƒê√£ nh·∫•n ESC th√†nh c√¥ng")
                    else:
                        print("Kh√¥ng th·ªÉ th·ª±c hi·ªán thao t√°c quay l·∫°i, ch·ªù 30 gi√¢y...")
                        time.sleep(30)
                        continue
                time.sleep(2)  # Ch·ªù animation ho√†n th√†nh

            # print("ƒêang th·ª≠ tham gia chi·∫øn tranh...")
            if use_general:
                if join_war_sequence(device_id):
                    # print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu")
                    break
                else:
                    # print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu")
                    # print("Ch·ªù 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i...")
                    time.sleep(30)
            else:
                if join_war_sequence_no_general(device_id):
                    # print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu (kh√¥ng ch·ªçn t∆∞·ªõng)")
                    break
                else:
                    # print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu (kh√¥ng ch·ªçn t∆∞·ªõng)")
                    # print("Ch·ªù 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i...")
                    time.sleep(30)
        except Exception as e:
            # print(f"L·ªói trong qu√° tr√¨nh tham gia chi·∫øn tranh l·∫ßn ƒë·∫ßu: {e}")
            # print("Ch·ªù 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i...")
            time.sleep(30)

    # Bi·∫øn ƒë·ªÉ theo d√µi tr·∫°ng th√°i k√©o m√†n h√¨nh
    scroll_up = False

    # V√≤ng l·∫∑p ch√≠nh ki·ªÉm tra v√† tham gia chi·∫øn tranh
    while True:
        try:
            # Ki·ªÉm tra xem c√≥ n√∫t auto_join kh√¥ng (ƒëang ·ªü m√†n h√¨nh chi·∫øn tranh)
            if not check_button_exists("auto_join", device_id=device_id):
                # print("Kh√¥ng ·ªü m√†n h√¨nh chi·∫øn tranh, ki·ªÉm tra tr·∫°ng th√°i...")

                # Ki·ªÉm tra n√∫t back
                if check_button_exists("back", device_id=device_id):
                    # print("Ph√°t hi·ªán ƒëang ·ªü m√†n h√¨nh ch·ªù, quay l·∫°i m√†n h√¨nh ch√≠nh...")
                    if not find_and_click_button("back", device_id=device_id):
                        # print("Kh√¥ng th·ªÉ click v√†o n√∫t back")
                        time.sleep(30)
                        continue
                    time.sleep(2)  # Ch·ªù animation ho√†n th√†nh

                # Th·ª±c hi·ªán l·∫°i chu·ªói h√†nh ƒë·ªông t·ª´ war_button
                if use_general:
                    if join_war_sequence(device_id):
                        print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh")
                    else:
                        # print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh")
                        # print("Ch·ªù 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i...")
                        time.sleep(30)
                else:
                    if join_war_sequence_no_general(device_id):
                        print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh (kh√¥ng ch·ªçn t∆∞·ªõng)")
                    else:
                        # print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh (kh√¥ng ch·ªçn t∆∞·ªõng)")
                        # print("Ch·ªù 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i...")
                        time.sleep(30)
                continue

            # Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ki·ªÉm tra
            print("Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ki·ªÉm tra...")
            time.sleep(10)

            # Ki·ªÉm tra n√∫t tham gia
            if check_button_exists("join_button", device_id=device_id):
                # print("T√¨m th·∫•y n√∫t tham gia, b·∫Øt ƒë·∫ßu tham gia chi·∫øn tranh...")
                # Th·ª±c hi·ªán chu·ªói h√†nh ƒë·ªông t·ª´ join_button
                if use_general:
                    if continue_war_sequence(device_id):
                        print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh")
                    else:
                        print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh")
                else:
                    if continue_war_sequence_no_general(device_id):
                        print("ƒê√£ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh (kh√¥ng ch·ªçn t∆∞·ªõng)")
                    else:
                        print("Kh√¥ng th·ªÉ ho√†n th√†nh chu·ªói h√†nh ƒë·ªông tham gia chi·∫øn tranh (kh√¥ng ch·ªçn t∆∞·ªõng)")
            else:
                # Th·ª±c hi·ªán k√©o m√†n h√¨nh
                if scroll_up:
                    print("K√©o m√†n h√¨nh l√™n...")
                    swipe_up()
                else:
                    print("K√©o m√†n h√¨nh xu·ªëng...")
                    swipe_down()

                # ƒê·∫£o ng∆∞·ª£c tr·∫°ng th√°i cho l·∫ßn sau
                scroll_up = not scroll_up

        except Exception as e:
            # print(f"L·ªói trong qu√° tr√¨nh ch·∫°y bot: {e}")
            # N·∫øu c√≥ l·ªói, ch·ªù th√™m 30 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
            time.sleep(30)            # C·∫≠p nh·∫≠t t·∫•t c·∫£ c√°c l·ªùi g·ªçi h√†m check_button_exists v√† find_and_click_button
            # b·∫±ng c√°ch th√™m device_id
            if check_button_exists("rally/join_button", device_id=device_id):
                find_and_click_button("rally/join_button", device_id=device_id)
            print(f"L·ªói khi tham gia rally: {e}")

def auto_join_advanced_rally_with_boss_selection(device_id=None, use_general=True, selected_bosses=None):
    """
    Advanced Rally Logic:
    1. T√¨m t·∫•t c·∫£ boss ƒë∆∞·ª£c ch·ªçn v√† l∆∞u t·ªça ƒë·ªô v√†o m·∫£ng
    2. Duy·ªát t·ª´ng boss trong m·∫£ng:
       - Ki·ªÉm tra button "joined" ngay d∆∞·ªõi boss
       - N·∫øu c√≥ "joined" ‚Üí b·ªè qua (ƒë√£ t·∫•n c√¥ng)
       - N·∫øu kh√¥ng c√≥ "joined" ‚Üí t√¨m button "join" ngay d∆∞·ªõi boss
       - N·∫øu c√≥ "join" ‚Üí click join ‚Üí th·ª±c hi·ªán war sequence (b·ªè ph·∫ßn t√¨m join)
       - N·∫øu kh√¥ng c√≥ "join" ‚Üí b·ªè qua (kh√¥ng th·ªÉ t·∫•n c√¥ng)
    3. Sau khi duy·ªát h·∫øt boss ‚Üí scroll ƒë·ªÉ t√¨m boss m·ªõi
    4. L·∫∑p l·∫°i
    """
    try:
        if not selected_bosses:
            print("‚ùå Kh√¥ng c√≥ boss n√†o ƒë∆∞·ª£c ch·ªçn")
            return False
        
        war_type = "c√≥ ch·ªçn t∆∞·ªõng" if use_general else "kh√¥ng ch·ªçn t∆∞·ªõng"
        print(f"üéØ B·∫Øt ƒë·∫ßu Advanced Rally ({war_type}) v·ªõi {len(selected_bosses)} boss: {selected_bosses}")
        
        # Import Advanced War Actions
        from actions.war_actions_advanced import (
            join_advanced_war_sequence, 
            join_advanced_war_sequence_no_general,
            find_all_boss_positions,
            find_join_button_below_boss,
        )
        
        # Thi·∫øt l·∫≠p device
        if device_id:
            from utils.adb_utils import set_device
            set_device(device_id)
            print(f"üîß Set device to: {device_id}")
        
        # Tho√°t ra m√†n h√¨nh ch√≠nh b·∫±ng ESC (gi·ªëng Basic)
        print("üîÑ Tho√°t ra m√†n h√¨nh ch√≠nh...")
        import time
        from utils.adb_utils import adb_command
        from utils.image_utils import check_button_exists, find_and_click_button
        max_esc_attempts = 5
        for i in range(max_esc_attempts):
            print(f"üîÑ ESC l·∫ßn {i+1}/{max_esc_attempts}")
            adb_command('adb shell input keyevent KEYCODE_ESCAPE')
            time.sleep(2)  # TƒÉng th·ªùi gian ch·ªù ƒë·ªÉ cancel button xu·∫•t hi·ªán
            
            # Ki·ªÉm tra xem c√≥ button cancel kh√¥ng
            if check_button_exists("cancel", device_id=device_id, threshold=0.75):
                print("‚úÖ T√¨m th·∫•y button cancel, click ƒë·ªÉ tho√°t ra m√†n h√¨nh ch√≠nh")
                if find_and_click_button("cancel", device_id=device_id, threshold=0.75):
                    time.sleep(2)  # Ch·ªù animation
                    print("‚úÖ ƒê√£ tho√°t ra m√†n h√¨nh ch√≠nh th√†nh c√¥ng")
                    break  # Ng·∫Øt v√≤ng l·∫∑p ESC ngay l·∫≠p t·ª©c
                else:
                    print("‚ùå Kh√¥ng th·ªÉ click cancel button")
            else:
                print(f"‚è≥ Ch∆∞a t√¨m th·∫•y cancel button... (l·∫ßn {i+1}/{max_esc_attempts})")
        
        # Ki·ªÉm tra war_button sau khi tho√°t ra m√†n h√¨nh ch√≠nh (ch·ªù v√¥ h·∫°n)
        print("üîç Ki·ªÉm tra war_button sau khi tho√°t ra m√†n h√¨nh ch√≠nh...")
        war_button_found = False
        war_button_attempts = 0
        
        while not war_button_found:
            if check_button_exists("war_button", device_id=device_id):
                print("‚úÖ T√¨m th·∫•y war_button, click ƒë·ªÉ v√†o m√†n h√¨nh war")
                if find_and_click_button("war_button", device_id=device_id):
                    time.sleep(3)  # Ch·ªù animation
                    war_button_found = True
                else:
                    print("‚ùå Kh√¥ng th·ªÉ click war_button")
                    time.sleep(2)
            else:
                war_button_attempts += 1
                print(f"‚è≥ Ch∆∞a t√¨m th·∫•y war_button... (l·∫ßn {war_button_attempts}) - Ch·ªù 20s")
                time.sleep(20)  # Ch·ªù 20s tr∆∞·ªõc khi ki·ªÉm tra l·∫°i
        
        # Bi·∫øn ƒë·ªÉ theo d√µi tr·∫°ng th√°i k√©o m√†n h√¨nh (gi·ªëng Basic)
        scroll_up = False
        
        # V√≤ng l·∫∑p ch√≠nh (gi·ªëng Basic)
        while True:
            try:
                # Ki·ªÉm tra auto_join button (gi·ªëng Basic)
                from utils.image_utils import check_button_exists, find_and_click_button
                if not check_button_exists("auto_join", device_id=device_id):
                    print("‚ö†Ô∏è Kh√¥ng c√≤n ·ªü trong war screen, c√≥ th·ªÉ b·ªã m·∫•t k·∫øt n·ªëi")
                    print("üîÑ Tho√°t ra m√†n h√¨nh ch√≠nh v√† t√¨m war_button...")
                    
                    # Tho√°t ra m√†n h√¨nh ch√≠nh b·∫±ng ESC
                    max_esc_attempts = 5
                    for i in range(max_esc_attempts):
                        print(f"üîÑ ESC l·∫ßn {i+1}/{max_esc_attempts}")
                        adb_command('adb shell input keyevent KEYCODE_ESCAPE')
                        time.sleep(2)
                        
                        if check_button_exists("cancel", device_id=device_id, threshold=0.75):
                            print("‚úÖ T√¨m th·∫•y button cancel, click ƒë·ªÉ tho√°t ra m√†n h√¨nh ch√≠nh")
                            if find_and_click_button("cancel", device_id=device_id, threshold=0.75):
                                time.sleep(2)
                                print("‚úÖ ƒê√£ tho√°t ra m√†n h√¨nh ch√≠nh th√†nh c√¥ng")
                                break
                    
                    # T√¨m war_button ƒë·ªÉ v√†o l·∫°i war screen
                    print("üîç T√¨m war_button ƒë·ªÉ v√†o l·∫°i war screen...")
                    war_button_found = False
                    
                    while not war_button_found:
                        if check_button_exists("war_button", device_id=device_id):
                            print("‚úÖ T√¨m th·∫•y war_button, click ƒë·ªÉ v√†o m√†n h√¨nh war")
                            if find_and_click_button("war_button", device_id=device_id):
                                time.sleep(3)
                                war_button_found = True
                                print("‚úÖ ƒê√£ v√†o l·∫°i war screen")
                            else:
                                print("‚ùå Kh√¥ng th·ªÉ click war_button")
                                time.sleep(2)
                        else:
                            print("‚è≥ Ch∆∞a t√¨m th·∫•y war_button... - Ch·ªù 20s")
                            time.sleep(20)
                    
                    continue
                
                # ADVANCED LOGIC: T√¨m v√† x·ª≠ l√Ω boss (C√°ch 2 - ƒë∆°n gi·∫£n)
                boss_attacked = False  # Flag ƒë·ªÉ bi·∫øt c√≥ boss n√†o ƒë∆∞·ª£c t·∫•n c√¥ng kh√¥ng
                
                # 1. T√¨m t·∫•t c·∫£ boss ƒë∆∞·ª£c ch·ªçn
                boss_positions = find_all_boss_positions(selected_bosses, device_id)
                
                # 2. N·∫øu kh√¥ng c√≥ boss n√†o ‚Üí c·∫ßn scroll
                if not boss_positions:
                    print("‚ùå Kh√¥ng t√¨m th·∫•y boss n√†o, s·∫Ω scroll")
                    # Kh√¥ng set boss_attacked = True ƒë·ªÉ cho ph√©p scroll
                else:
                    # 3. Duy·ªát t·ª´ng boss
                    for boss_info in boss_positions:
                        boss_x, boss_y, boss_width, boss_height, boss_name = boss_info
                        
                        # 4. T√¨m button "join" trong v√πng d∆∞·ªõi boss
                        print(f"üîç X·ª≠ l√Ω boss: {boss_name} t·∫°i ({boss_x}, {boss_y})")
                        print(f"üîç T√¨m ki·∫øm join button cho boss {boss_name}...")
                        join_button_pos = find_join_button_below_boss(boss_x, boss_y, boss_width, boss_height, device_id)
                        
                        # 5. N·∫øu kh√¥ng c√≥ join button ‚Üí boss ƒë√£ ƒë∆∞·ª£c join, b·ªè qua
                        if not join_button_pos:
                            print(f"‚úÖ Boss {boss_name} ƒë√£ ƒë∆∞·ª£c join (kh√¥ng c√≥ join button), b·ªè qua")
                            continue
                        
                        if join_button_pos:
                            join_x, join_y = join_button_pos
                            print(f"üéØ T√¨m th·∫•y join button cho {boss_name} t·∫°i ({join_x}, {join_y})")
                            
                            # Click join button
                            print(f"üñ±Ô∏è ƒêang click join button t·∫°i ({join_x}, {join_y}) cho boss {boss_name}")
                            if tap_screen(join_x, join_y):
                                print(f"‚úÖ ƒê√£ click join button cho boss {boss_name}")
                                boss_attacked = True  # Set True ngay khi click th√†nh c√¥ng
                                
                                # 6. Th·ª±c hi·ªán war sequence
                                if use_general:
                                    war_success = join_advanced_war_sequence(device_id, selected_bosses)
                                    if war_success:
                                        print("‚úÖ ƒê√£ ho√†n th√†nh war sequence v·ªõi t∆∞·ªõng")
                                    else:
                                        print("‚ùå Kh√¥ng th·ªÉ ho√†n th√†nh war sequence v·ªõi t∆∞·ªõng")
                                else:
                                    war_success = join_advanced_war_sequence_no_general(device_id, selected_bosses)
                                    if war_success:
                                        print("‚úÖ ƒê√£ ho√†n th√†nh war sequence kh√¥ng t∆∞·ªõng")
                                    else:
                                        print("‚ùå Kh√¥ng th·ªÉ ho√†n th√†nh war sequence kh√¥ng t∆∞·ªõng")
                                
                                break  # Ch·ªâ t·∫•n c√¥ng 1 boss m·ªói l·∫ßn
                            else:
                                print(f"‚ùå Kh√¥ng th·ªÉ click join button cho boss {boss_name}")
                        else:
                            print(f"‚ùå Kh√¥ng t√¨m th·∫•y join button cho boss {boss_name}")
                
                # 7. N·∫øu kh√¥ng c√≥ boss n√†o ƒë∆∞·ª£c t·∫•n c√¥ng ho·∫∑c kh√¥ng t√¨m th·∫•y boss ‚Üí scroll (gi·ªëng Basic)
                if not boss_attacked or not boss_positions:
                    if scroll_up:
                        print("üì± K√©o m√†n h√¨nh l√™n...")
                        swipe_up()
                    else:
                        print("üì± K√©o m√†n h√¨nh xu·ªëng...")
                        swipe_down()
                    scroll_up = not scroll_up
                    print(f"üîÑ L·∫ßn scroll ti·∫øp theo s·∫Ω: {'l√™n' if scroll_up else 'xu·ªëng'}")
                    time.sleep(4)  # Ch·ªù m√†n h√¨nh ·ªïn ƒë·ªãnh sau khi scroll
                    
                    # Ch·ª•p ·∫£nh m·ªõi sau khi scroll ƒë·ªÉ t√¨m boss m·ªõi
                    print("üì∏ Ch·ª•p ·∫£nh m·ªõi sau khi scroll...")
                    screenshot_filename = f"current_screen_{device_id.replace(':', '_')}.JPG"
                    if take_screenshot(screenshot_filename, device_id):
                        print("‚úÖ ƒê√£ ch·ª•p ·∫£nh m·ªõi sau scroll")
                    else:
                        print("‚ùå Kh√¥ng th·ªÉ ch·ª•p ·∫£nh m·ªõi sau scroll")
                
            except Exception as e:
                print(f"L·ªói trong qu√° tr√¨nh ch·∫°y bot: {e}")
                time.sleep(30)
        
    except Exception as e:
        print(f"‚ùå L·ªói trong auto_join_advanced_rally_with_boss_selection: {e}")
        return False
